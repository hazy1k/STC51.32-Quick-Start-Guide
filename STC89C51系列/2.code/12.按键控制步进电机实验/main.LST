C51 COMPILER V9.01   MAIN                                                                  06/27/2024 10:55:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\dianzi\Keil C51\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REGX52.H>
   2          
   3          //定义ULN2003控制步进电机管脚
   4          sbit IN1_A = P1^0;
   5          sbit IN2_B = P1^1;
   6          sbit IN3_C = P1^2;
   7          sbit IN4_D = P1^3;
   8          
   9          //定义独立按键控制脚
  10          sbit KEY1 = P3^1;
  11          sbit KEY2 = P3^0;
  12          sbit KEY3 = P3^2;
  13          sbit KEY4 = P3^3;
  14          
  15          //使用宏定义独立按键按下的键值
  16          #define KEY1_PRESS      1
  17          #define KEY2_PRESS      2
  18          #define KEY3_PRESS      3
  19          #define KEY4_PRESS      4
  20          #define KEY_UNPRESS     0
  21          
  22          // 定义步进电机速度，值越小，速度越快（1~5）
  23          #define STEPMOTOR_MAXSPEED      1  
  24          #define STEPMOTOR_MINSPEED      5       
  25          
  26          void delay_10us(unsigned int ten_us)
  27          {
  28   1              while(ten_us--);        
  29   1      }
  30          
  31          void delay_ms(unsigned int ms)
  32          {
  33   1              unsigned int i,j;
  34   1              for(i=ms;i>0;i--)
  35   1                      for(j=110;j>0;j--);
  36   1      }
  37          
  38          // 发送脉冲函数
  39          void motor_28BYJ48_send(unsigned char step, unsigned char dir)
  40          {
  41   1              unsigned char temp = step; // 定义临时变量为步进序号
  42   1              
  43   1              if(dir == 0) // 如果为逆时针旋转
  44   1              {
  45   2                      temp = 7 - step; // 调换节拍信号
  46   2              }
  47   1      
  48   1              switch(temp) // 8个节拍控制：A->AB->B->BC->C->CD->D->DA
  49   1              {
  50   2                      case 0: 
  51   2                              IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=0;
  52   2                              break;
  53   2                      case 1: 
  54   2                              IN1_A=1;IN2_B=1;IN3_C=0;IN4_D=0;
  55   2                              break;
C51 COMPILER V9.01   MAIN                                                                  06/27/2024 10:55:34 PAGE 2   

  56   2                      case 2: 
  57   2                              IN1_A=0;IN2_B=1;IN3_C=0;IN4_D=0;
  58   2                              break;
  59   2                      case 3: 
  60   2                              IN1_A=0;IN2_B=1;IN3_C=1;IN4_D=0;
  61   2                              break;
  62   2                      case 4: 
  63   2                              IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=0;
  64   2                              break;
  65   2                      case 5: 
  66   2                              IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=1;
  67   2                              break;
  68   2                      case 6: 
  69   2                              IN1_A=0;IN2_B=0;IN3_C=0;IN4_D=1;
  70   2                              break;
  71   2                      case 7: 
  72   2                              IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=1;
  73   2                              break;
  74   2                      default: 
  75   2                              IN1_A=0;IN2_B=0;IN3_C=0;IN4_D=0;
  76   2                              break; // 停止相序      
  77   2              }                       
  78   1      }
  79          
  80          // 按键扫描函数
  81          unsigned char key_scan(int mode)
  82          {
  83   1              static int key = 1; // 静态变量
  84   1      
  85   1              if(mode)key = 1; // 连续扫描按键
  86   1              if(key == 1 && (KEY1 == 0 || KEY2 == 0 || KEY3 == 0|| KEY4 == 0)) // 代表任意按键按下
  87   1              {
  88   2                      delay_10us(1000); // 消抖
  89   2                      key = 0;
  90   2                      if(KEY1 == 0) // 代表按键1按下
  91   2                              return KEY1_PRESS;
  92   2                      else if(KEY2 == 0) // 代表按键1按下
  93   2                              return KEY2_PRESS;
  94   2                      else if(KEY3 == 0) // 代表按键3按下
  95   2                              return KEY3_PRESS;
  96   2                      else if(KEY4 == 0) // 代表按键4按下
  97   2                              return KEY4_PRESS;      
  98   2              }
  99   1              else if(KEY1 == 1 && KEY2 == 1 && KEY3 == 1 && KEY4 == 1) // 代表无按键按下
 100   1              {
 101   2                      key = 1;                        
 102   2              }
 103   1              return KEY_UNPRESS;             
 104   1      }
 105          
 106          void main()
 107          {       
 108   1              int key = 0;
 109   1              int dir = 0; // 默认逆时针方向
 110   1              int speed = STEPMOTOR_MAXSPEED; // 默认最大速度旋转
 111   1              int step = 0;
 112   1      
 113   1              while(1)
 114   1              {                       
 115   2                      key = key_scan(0);
 116   2                      if(key == KEY1_PRESS) // 换向
 117   2                      {
C51 COMPILER V9.01   MAIN                                                                  06/27/2024 10:55:34 PAGE 3   

 118   3                              dir = !dir; // 方向反转    
 119   3                      }
 120   2                      else if(key == KEY2_PRESS) // 加速
 121   2                      {
 122   3                              // 若速度已经最大，此时加速会导致速度减1
 123   3                              if(speed>STEPMOTOR_MAXSPEED)
 124   3                                      speed -= 1;                     
 125   3                      }
 126   2                      else if(key == KEY3_PRESS)//减速
 127   2                      {
 128   3                              // 若速度已经最小，此时减速会导致速度加1
 129   3                              if(speed < STEPMOTOR_MINSPEED)
 130   3                                      speed +=1;                      
 131   3                      }
 132   2      
 133   2                      motor_28BYJ48_send(step++, dir);
 134   2                      if(step == 8)
 135   2                      {
 136   3                              step=0; 
 137   3                      }       
 138   2                      delay_ms(speed);                                                
 139   2              }               
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    375    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
